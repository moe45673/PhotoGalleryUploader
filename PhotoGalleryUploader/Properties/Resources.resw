<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
  <data name="CannotRegisterCompositeCommandInItself" xml:space="preserve">
    <value>Cannot register a CompositeCommand in itself.</value>
  </data>
  <data name="CannotRegisterSameCommandTwice" xml:space="preserve">
    <value>Cannot register the same command twice in the same CompositeCommand.</value>
  </data>
  <data name="CyclicDependencyFound" xml:space="preserve">
    <value>At least one cyclic dependency has been found in the module catalog. Cycles in the module dependencies must be avoided.</value>
  </data>
  <data name="DefaultDebugLoggerPattern" xml:space="preserve">
    <value>{1}: {2}. Priority: {3}. Timestamp:{0:u}.</value>
  </data>
  <data name="DelegateCommandDelegatesCannotBeNull" xml:space="preserve">
    <value>Neither the executeMethod nor the canExecuteMethod delegates can be null.</value>
  </data>
  <data name="DelegateCommandInvalidGenericPayloadType" xml:space="preserve">
    <value>T for DelegateCommand&lt;T&gt; is not an object nor Nullable.</value>
  </data>
  <data name="DependencyForUnknownModule" xml:space="preserve">
    <value>Cannot add dependency for unknown module {0}</value>
  </data>
  <data name="DependencyOnMissingModule" xml:space="preserve">
    <value>A module declared a dependency on another module which is not declared to be loaded. Missing module(s): {0}</value>
  </data>
  <data name="DuplicatedModule" xml:space="preserve">
    <value>A duplicated module with name {0} has been found by the loader.</value>
  </data>
  <data name="EventAggregatorNotConstructedOnUIThread" xml:space="preserve">
    <value>To use the UIThread option for subscribing, the EventAggregator must be constructed on the UI thread.</value>
  </data>
  <data name="FailedToLoadModule" xml:space="preserve">
    <value>An exception occurred while initializing module '{0}'. 
    - The exception message was: {2}
    - The Assembly that the module was trying to be loaded from was:{1}
    Check the InnerException property of the exception for more information. If the exception occurred while creating an object in a DI container, you can exception.GetRootException() to help locate the root cause of the problem.</value>
  </data>
  <data name="FailedToLoadModuleNoAssemblyInfo" xml:space="preserve">
    <value>An exception occurred while initializing module '{0}'. 
    - The exception message was: {1}
    Check the InnerException property of the exception for more information. If the exception occurred 
    while creating an object in a DI container, you can exception.GetRootException() to help locate the 
    root cause of the problem.</value>
  </data>
  <data name="FailedToRetrieveModule" xml:space="preserve">
    <value>Failed to load type for module {0}. 
Error was: {1}.</value>
  </data>
  <data name="InvalidDelegateRerefenceTypeException" xml:space="preserve">
    <value>Invalid Delegate Reference Type Exception</value>
  </data>
  <data name="InvalidPropertyNameException" xml:space="preserve">
    <value>The entity does not contain a property with that name</value>
  </data>
  <data name="ModuleDependenciesNotMetInGroup" xml:space="preserve">
    <value>Module {0} depends on other modules that don't belong to the same group.</value>
  </data>
  <data name="PropertySupport_ExpressionNotProperty_Exception" xml:space="preserve">
    <value>The member access expression does not access a property.</value>
  </data>
  <data name="PropertySupport_NotMemberAccessExpression_Exception" xml:space="preserve">
    <value>The expression is not a member access expression.</value>
  </data>
  <data name="PropertySupport_StaticExpression_Exception" xml:space="preserve">
    <value>The referenced property is a static property.</value>
  </data>
  <data name="StartupModuleDependsOnAnOnDemandModule" xml:space="preserve">
    <value>Module {0} is marked for automatic initialization when the application starts, but it depends on modules that are marked as OnDemand initialization. To fix this error, mark the dependency modules for InitializationMode=WhenAvailable, or remove this validation by extending the ModuleCatalog class.</value>
  </data>
  <data name="StringCannotBeNullOrEmpty" xml:space="preserve">
    <value>The provided String argument {0} must not be null or empty.</value>
  </data>
</root>